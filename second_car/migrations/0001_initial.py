# Generated by Django 3.2.8 on 2021-10-09 12:37

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import second_car.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(max_length=14, verbose_name='Номер телефона')),
                ('city', models.CharField(max_length=100, verbose_name='Город')),
                ('photo', models.ImageField(default='nofoto.png', upload_to=second_car.models.img_directory_path, verbose_name='Фотография пользователя')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CarAdvertisement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(max_length=100, verbose_name='Марка')),
                ('model_car', models.CharField(max_length=100, verbose_name='Модель')),
                ('engine_volume', models.FloatField(verbose_name='Обьём двигателя')),
                ('fuel', models.CharField(blank=True, choices=[('Н', 'Не указан'), ('Д', 'Дизель'), ('Б', 'Бензин'), ('ГБ', 'Газ/Бензин'), ('Е', 'Електро'), ('Г', 'Гибрид')], default='Н', max_length=3, verbose_name='Топливо')),
                ('transmission', models.CharField(blank=True, choices=[('Н', 'Не указан'), ('М', 'Механика'), ('А', 'Автомат'), ('В', 'Вариатор'), ('Т', 'Типтроник'), ('Ад', 'Адаптивная ')], default='Н', max_length=3, verbose_name='Трансмиссия')),
                ('color', models.CharField(max_length=100, verbose_name='Цвет')),
                ('odometr', models.PositiveIntegerField(verbose_name='Пробег')),
                ('year', models.PositiveSmallIntegerField(verbose_name='Год выпуска')),
                ('price', models.PositiveIntegerField(verbose_name='Цена')),
                ('city', models.CharField(max_length=100, verbose_name='Город регистрации')),
                ('header', models.CharField(max_length=250, unique=True, verbose_name='Заголовок')),
                ('description', models.TextField(verbose_name='Описание')),
                ('add_params', models.JSONField(verbose_name='Дополнителные параметры')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authoradd', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
            ],
            options={
                'verbose_name': 'Обьявление',
                'verbose_name_plural': 'Обьявления',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.CharField(max_length=100, verbose_name='Тип кузова')),
            ],
            options={
                'verbose_name': 'Кузов',
                'verbose_name_plural': 'Кузова',
            },
        ),
        migrations.CreateModel(
            name='ImageCars',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Фото атомобиля', max_length=100, verbose_name='Фотография авто')),
                ('image', models.ImageField(default='car_no.jpg', upload_to='photo-cars', verbose_name='Фотографии автомобиля')),
                ('image2', models.ImageField(default='car_no.jpg', upload_to='photo-cars', verbose_name='Фотографии автомобиля')),
                ('image3', models.ImageField(default='car_no.jpg', upload_to='photo-cars', verbose_name='Фотографии автомобиля')),
                ('image4', models.ImageField(default='car_no.jpg', upload_to='photo-cars', verbose_name='Фотографии автомобиля')),
                ('image5', models.ImageField(default='car_no.jpg', upload_to='photo-cars', verbose_name='Фотографии автомобиля')),
                ('image6', models.ImageField(default='car_no.jpg', upload_to='photo-cars', verbose_name='Фотографии автомобиля')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='second_car.caradvertisement', verbose_name='Обьявление')),
            ],
            options={
                'verbose_name': 'Фотография автомобиля',
                'verbose_name_plural': 'Фотографии автомобилей',
            },
        ),
        migrations.AddField(
            model_name='caradvertisement',
            name='typeauto',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='typeauto', to='second_car.category', verbose_name='Тип кузова'),
        ),
    ]
